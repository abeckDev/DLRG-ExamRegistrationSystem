@page "/"
@inject HttpClient _httpClient

<PageTitle>Home</PageTitle>

<form method="post" @onsubmit="SubmitForm" @formname="malsehen" class="form-horizontal">
    <fieldset>
        <!-- Form Name -->
        <legend>
            <b>Teilnahmevoraussetzungen AL Bootsf&uuml;hrerschein</b>
        </legend>
        <!-- Text input-->
        <div class="form-group">
            <label class="col-md-4 control-label" for="Name">Name</label>
            <div class="col-md-4">
                <InputText @bind-Value="examRegistrationRequest.Surname" id="Name" name="Name" type="text"
                           placeholder="Name" class="form-control input-md" required="" />
            </div>
        </div>
        <!-- Text input-->
        <div class="form-group">
            <label class="col-md-4 control-label" for="Vorname">Vorname</label>
            <div class="col-md-4">
                <InputText @bind-Value="examRegistrationRequest.Name" id="Vorname" name="Vorname" type="text"
                           placeholder="Vorname" class="form-control input-md" required="" />
            </div>
        </div>
        <!-- Text input-->
        <div class="form-group">
            <label class="col-md-4 control-label" for="Geburtsdatum">Geburtsdatum</label>
            <div class="col-md-4">
                <InputDate Type="InputDateType.Date" CurrentValue="@DateTime.Today.ToString("dd.MM.yyyy")" @bind-Value="examRegistrationRequest.Birthday" id="Geburtsdatum" DisplayName="Geburtsdatum"
                           class="form-control input-md" required="" />
            </div>
        </div>
        <!-- Select Basic -->
        <div class="form-group">
            <label class="col-md-4 control-label" for="LV">Ausrichtender LV</label>
            <div class="col-md-4">

                <InputSelect @bind-Value="examRegistrationRequest.Landesverband" id="LV" name="LV" class="form-control">
                    @{
                        foreach (var landesverband in Enum.GetValues(typeof(Landesverband)))
                        {
                            <option value="@landesverband">@landesverband</option>
                        }
                    }
                </InputSelect>
            </div>
        </div>
        <!-- File Button -->
        <div class="form-group">
            <label class="col-md-4 control-label" for="Passphoto">Passphoto als JPG</label>
            <div class="col-md-4">
                <InputFile OnChange="HandlePhotoChange" id="Passphoto" name="Passphoto" class="input-file" />
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-4 control-label" for="Voraussetzungen als .pdf">Teilnahmevoraussetzungen als .pdf</label>
            <div class="col-md-4">
                <InputFile OnChange="HandlePdfChange" id="Voraussetzungen als .pdf" name="Voraussetzungen als .pdf" class="input-file" />
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-4 control-label" for="send">&nbsp;</label>
            <div class="col-md-4">
                <button type="submit" name="send">Absenden</button>
            </div>
        </div>
    </fieldset>
</form>

@code{

    public ExamRegistrationRequest examRegistrationRequest { get; set; }

    protected override async Task OnInitializedAsync()
    {
        examRegistrationRequest = new ExamRegistrationRequest()
            {
                Birthday = DateTime.Today,
            };
    }

    private async Task HandlePhotoChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using (var ms = new MemoryStream())
            {
                await file.OpenReadStream().CopyToAsync(ms);
                examRegistrationRequest.Passphoto = ms.ToArray();
            }
        }
    }

    private async Task HandlePdfChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using (var ms = new MemoryStream())
            {
                await file.OpenReadStream().CopyToAsync(ms);
                examRegistrationRequest.RequirementsPdf = ms.ToArray();
            }
        }
    }

    private HttpClient _client; // Injected via DI

    private async Task SubmitForm()
    {
        using var formData = new MultipartFormDataContent();

        formData.Add(new StringContent(examRegistrationRequest.Name), "Name");
        formData.Add(new StringContent(examRegistrationRequest.Surname), "Surname");
        formData.Add(new StringContent(examRegistrationRequest.Birthday.ToString("dd.MM.yyyy")), "Birthday");
        formData.Add(new StringContent(examRegistrationRequest.Landesverband.ToString()), "Landesverband");

        if (examRegistrationRequest.Passphoto != null)
            formData.Add(new ByteArrayContent(examRegistrationRequest.Passphoto), "Passphoto");

        if (examRegistrationRequest.RequirementsPdf != null)
            formData.Add(new ByteArrayContent(examRegistrationRequest.RequirementsPdf), "RequirementsPdf");

        var response = await _httpClient.PostAsync("ClassifyInputFunction", formData);

        if (!response.IsSuccessStatusCode)
        {
            // Log or handle the error
        }
    }

    public class ExamRegistrationRequest
    {
        public string Name { get; set; }

        public string Surname { get; set; }

        public DateTime Birthday { get; set; }

        public Landesverband Landesverband { get; set; }

        public byte[] Passphoto { get; set; }

        public byte[] RequirementsPdf { get; set; }

    }

    public enum Landesverband
    {
        Hessen,
        Sachsen,
        MecklenburgVorpommern,
        Bayern,
        Baden,
        Wuerttemberg,
        Thueringen,
        Saarland,
        RheinlandPfalz,
        Nordrhein,
        Westfalen,
        Niedersachsen,
        Hamburg,
        Bremen,
        Berlin,
        Brandenburg,
        SchleswigHolstein,
        SachsenAnhalt,
        Bundesverband
    }
}
